swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "1.0.0"
  title: Visitors announcement REST API for Connected Building
  description: |
    This is the REST API to announce the arrival of visitors.

    You can view the content of this YAML file in the [Swagger editor](http://editor.swagger.io/). 

    This API is used by the mobile application developed by Schneider/Cardiweb
    in the context of the **Connected Building** project, for the new buildings **Les Dunes**
    in **Val de Fontenay**.

    The design of the API is based on the [Google JSON style guide](https://google.github.io/styleguide/jsoncstyleguide.xml).
    For example, each response contains either a data or an error as the top level object. 

    ### Security
    This API is secure using the in house **GAIA** solution.

    For each call to the API you must provide:
    * In the HTTP headers the GAIA domain token :
    ```
    Authorization: Bearer <domain-token-value>
    ```
    * In the Cookie the GAIA SSO token :
    ```
    Cookie: <sso-token-name>=<sso-token-value>
    ```
    
    ### Changelog
    * v1.0.0: initial proposal

host: h-apps.socgen.com
basePath: /mybuilding/visitors/api/v1
tags:
  - name: Announcements
  - name: Buildings
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

################################################################################
#                                           Parameters                         #
################################################################################
parameters:
  announcementId:
    name: announcementId
    in: path
    description: The id of the announcement
    type: string
    required: true

################################################################################
#                                           Paths                              #
################################################################################
paths:

## Path /buildings ########################################################
  /buildings:
    get:
      tags:
        - Buildings
      description: Returns the buildings list
      responses:
        "200":
          description: Success. Returns a list of buildings.
          schema:
            type: object
            properties:
              meta:
                  properties:
                    code:
                      type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/Building'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

## Path /announcements ########################################################
  /announcements:
    get:
      tags:
        - Announcements
      parameters:
        - name: startDatetime
          in: query
          description: Start datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
          required: false
          type: string
        - name: endDatetime
          in: query
          description: End datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
          required: false
          type: string
        - name: hostEmail
          in: query
          description: Email of the host
          required: false
          type: string
      description: |
        Returns all the announcements.
        By default returns only the announcements which datetime is equal or greater than current datetime.
      responses:
        "200":
          description: Success. Returns a list of announcements.
          schema:
            type: object
            properties:
              meta:
                  properties:
                    code:
                      type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/Announcement'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    
    post:
      tags:
        - Announcements
      description: Creates an announcement
      parameters:
        - name: body
          in: body
          description: Announcement data
          required: true
          schema:
            $ref: '#/definitions/Announcement'
      responses:
        "201":
          description: |
            "Success. Returns the URL of the announcement in the location header."
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

## Path announcements/{announcementId} ########################################################
  /announcements/{announcementId}:
    parameters:
      - $ref: '#/parameters/announcementId'
    get:
      tags:
        - Announcements
      description: Returns an announcement
      responses:
        "200":
          description: Success. Returns an announcement.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                $ref: '#/definitions/Announcement'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Announcements
      description: Updates an announcement
      parameters:
        - name: body
          in: body
          description: Announcement data
          required: true
          schema:
            $ref: '#/definitions/Announcement'
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Announcements
      description: Deletes an announcement
      responses:
        "204":
          description: Success (204=No Content)
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Building:
    description: Building data
    type: object
    readOnly: true
    properties:
      id:
        type: string
        description: Identifier of the building
      name:
        type: string
        description: Name of the building
      receptions:
        type: array
        description: List of receptions
        items:
          $ref: '#/definitions/Reception'
  
  Reception:
    description: Reception data
    type: object
    readOnly: true
    properties:
      id:
        type: string
        description: Identifier of the reception
      name:
        type: string
        description: Name of the reception
    
  Announcement:
    description: Announce data
    type: object
    required:
      - id
      - building
      - reception
      - datetime
      - type
      - hostEmail
      - visitors
    properties:
      id:
        type: string
        description: Identifier of the announcement
      building:
        type: string
        description: Identifier of the building
      reception:
        type: string
        description: Identifier of the reception
      datetime:
        type: string
        description: |
          Date and time of the arrival of the visitors
          [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)
      type:
        type: string
        description: Reception type
      hostEmail:
        type: string
        description: Email of the person that will receive the visitors
      contactEmail:
        type: string
        description: Email of the person to contact when the visitors arrives
      room:
        type: string
        description: Name of the room
      comment:
        type: string
        description: Free comment
      visitors:
        type: array
        items:
          $ref: '#/definitions/Visitor'
        
  Visitor:
    description: Visitor data
    type: object
    required:
      - civility
      - lastname
      - firstname
      - company
      - email
    properties:
      civility:
        type: string
        description: Civility of the visitor
      lastname: 
        type: string
        description: Last name of the visitor
      firstname: 
        type: string
        description: First name of the visitor
      company:
        type: string
        description: Company name of the visitor
      email:
        type: string
        description: Email of the visitor

  Error:
    description: Error object with a code and a message
    type: object
    readOnly: true
    properties:
      code:
        type: string
      message:
        type: string
