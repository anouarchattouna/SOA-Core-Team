swagger: "2.0"

################################################################################
#                              API Information                                 #
################################################################################
info:
  version: "1.0.7"
  title: Rooms REST API for Connected Building
  description: |
    This is the REST API to book a room for a meeting.

    You can view the content of this YAML file in the [Swagger editor](http://editor.swagger.io/). 
    Just copy/paste the content of this YAML in the left pane of the Swagger editor.
    The right pane will show you the well formatted documentation. 

    This API is used by the mobile application developed by Schneider/Cardiweb
    in the context of the **Connected Building** project, for the new buildings **Les Dunes**
    in **Val de Fontenay**.

    The design of the API is based on the [Google JSON style guide](https://google.github.io/styleguide/jsoncstyleguide.xml).
    For example, **each response contains either a data or an error as the top level object**. The **meta attribute provided 
    in each response is optional** and is reserved for future use to ease the parsing of response data.

    ### Security
    This API is secure using the in house **GAIA** solution.

    For each call to the API, both the SSO token GAIA and the Domain token GAIA must be provided in the HTTP headers:
    ```
    <sso-token-name>: <sso-token-value>
    Authorization: Bearer <domain-token-value>
    ```
    ### Changelog
    * v1.0.7
      * For /buildings path, the site parameter is now optional
      * For /rooms path, the site parameter is now optional
      * For /rooms path, removal of the area parameter
      * For /rooms/availability, removal of the area parameter
      * Removal of the Area definition
      * In the Building definition, add of site and country properties
      * In the Room definition, rename of the longName propery by fullName
      * In the Room definition, rename of the shortName propery by name
      * In the Room definition, add of the office property
    * v1.0.6
      * In /buildings, the building parameter is now optional (to allow the search of all the buildings of a site)
      * The Floor object now contains the roomIds of the floor (to allow to link a room to a floor, then to an area, then to a building...). 
    * v1.0.5: split of the /rooms/availability in 2 operations
    * v1.0.4: add of new optional parameters to /rooms/availability (to search available rooms for a building for example)
    * v1.0.3: add of the Area concept (a Building is composed of Areas which are composed of Floors). The GET rooms now takes the optional parameter area.
    * v1.0.2: add of /bookings/mybookings, /rooms/availability, /participants/availability
    * v1.0.1: use objects instead of strings for buildings
    * v1.0.0: initial proposal

host: h-apps.socgen.com
basePath: /mybuilding/api/hermes/v1
tags:
  - name: Rooms
  - name: Buildings
  - name: Bookings
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json


################################################################################
#                                           Parameters                         #
################################################################################
parameters:
  bookingId:
    name: bookingId
    in: path
    description: The id of the booking
    type: string
    required: true


################################################################################
#                                           Paths                              #
################################################################################
paths:


## Path /buildings ########################################################
  /buildings:
    get:
      tags:
        - Buildings
      description: |
        Returns a list of buildings, with only 1 building if the building name is provided, but with  all the buildings of the site (or of the country if the site parameter is missing) if the buiding name is missing.
        Does NOT return Rooms objects. Call /rooms to get Rooms.
      parameters:
        - name: country
          in: query
          description: Country code of the building (e.g. "FR")
          required: true
          type: string
        - name: site
          in: query
          description: Site name of the building (e.g. "Val de Fontenay"). Optional.
          required: false
          type: string
        - name: building
          in: query
          description: Building name (e.g. "Les Dunes - A"). Optional.
          required: false
          type: string
      responses:
        "200":
          description: Success. Returns a list of buildings.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/Building'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


## Path /rooms ########################################################
  /rooms:
    get:
      tags:
        - Rooms
      description: Returns the rooms of a building (the search can be limited to a specif floor)
      parameters:
        - name: country
          in: query
          description: Country code of the building (e.g. "FR")
          required: true
          type: string
        - name: site
          in: query
          description: Site name of the building (e.g. "Val de Fontenay"). Optional.
          required: false
          type: string
        - name: building
          in: query
          description: Building name for which the rooms are searched (e.g. "Les Dunes - A"). Optional.
          required: false
          type: string
        - name: floor
          in: query
          description: Floor name for which the rooms are searched (e.g. "A11"). Optional. But if provided, the building  parameter must also be provided.
          required: false
          type: string
      responses:
        "200":
          description: Success. Returns a list of rooms.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/Room'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


## Path /rooms/availability #################################################
  /rooms/availability?rooms=...:
    get:
      tags:
        - Rooms
      description: |
        Returns the availability of rooms for a timeslot.
        The list of the rooms to check for availability can be defined using 2 ways:
        * via a comma separated lists of roomIds (see /rooms/availability?rooms=...)
        * via the tuple (country, site, [building, floor]) (see /rooms/availability?country=...&site=...[&building=...&floor=...])
      parameters:
        - name: rooms
          in: query
          description: Comma separated list of the roomIds to check for availability.
          required: true
          type: string
        - name: startDatetime
          in: query
          description: "Start datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) of the timeslot to check for availability"
          required: true
          type: string
        - name: endDatetime
          in: query
          description: "End datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)  of the timeslot to check for availability" 
          required: true
          type: string
      responses:
        "200":
          description: Success. Returns an array with the availability of the rooms.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/RoomAvailability'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /rooms/availability?country=...&site=...[&building=...&floor=...]:
    get:
      tags:
        - Rooms
      description: |
        Returns the availability of rooms for a timeslot.
        The list of the rooms to check for availability can be defined using 2 ways:
        * via a comma separated lists of roomIds (see /rooms/availability?rooms=...)
        * via the tuple (country, site, [building, floor]) (see /rooms/availability?country=...&site=...[&building=...&floor=...])
      parameters:
        - name: country
          in: query
          description: Country code of the building (e.g. "FR").
          required: true
          type: string
        - name: site
          in: query
          description: Site name of the building (e.g. "Val de Fontenay").
          required: true
          type: string
        - name: building
          in: query
          description: Building name for which the rooms are searched (e.g. "Les Dunes - A"). Optional.
          required: false
          type: string
        - name: floor
          in: query
          description: Floor name for which the rooms are searched (e.g. "A11"). Optional. 
          required: false
          type: string
        - name: startDatetime
          in: query
          description: "Start datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) of the timeslot to check for availability"
          required: true
          type: string
        - name: endDatetime
          in: query
          description: "End datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)  of the timeslot to check for availability" 
          required: true
          type: string
      responses:
        "200":
          description: Success. Returns an array with the availability of the rooms.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/RoomAvailability'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


## Path /bookings ########################################################
  /bookings:
    get:
      tags:
        - Bookings
      description: Returns the bookings of a room
      parameters:
        - name: room
          in: query
          description: RoomId for which the bookings are searched
          required: true
          type: string
        - name: startDatetime
          in: query
          description: "Start datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) to be used for the search"
          required: true
          type: string
        - name: endDatetime
          in: query
          description: "End datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) to be used for the search" 
          required: true
          type: string
      responses:
        "200":
          description: Success. Returns a list of bookings for the room.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/Booking'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - Bookings
      description: Creates a booking for a room
      parameters:
        - name: body
          in: body
          description: Booking data
          required: true
          schema:
            $ref: '#/definitions/Booking'
      responses:
        "201":
          description: "Success. Returns the URL of the booking in the location header."
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


## Path bookings/{bookingId} ########################################################
  /bookings/{bookingId}:
    parameters:
      - $ref: '#/parameters/bookingId'
    get:
      tags:
        - Bookings
      description: Returns a booking
      responses:
        "200":
          description: Success. Returns a booking.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                $ref: '#/definitions/Booking'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Bookings
      description: Updates a booking
      parameters:
        - name: body
          in: body
          description: Booking data
          required: true
          schema:
            $ref: '#/definitions/Booking'
      responses:
        "200":
          description: Success
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Bookings
      description: Deletes a booking for a room
      responses:
        "204":
          description: Success (204=No Content)
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


## Path /bookings/mybookings #################################################
  /bookings/mybookings:
    get:
      tags:
        - Bookings
      description: Returns the bookings of the authenticated user
      parameters:
        - name: startDatetime
          in: query
          description: "Start datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) to be used for the search"
          required: true
          type: string
        - name: endDatetime
          in: query
          description: "End datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) to be used for the search" 
          required: true
          type: string
      responses:
        "200":
          description: Success. Returns a list of bookings for the authenticated user.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/Booking'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


## Path /participants/availability #################################################
  /participants/availability:
    get:
      tags:
        - Participants
      description: Returns the availability of the participants for a timeslot
      parameters:
        - name: participants
          in: query
          description: Comma separated list of the participants of the meeting (emails of the participants)
          required: true
          type: string
        - name: startDatetime
          in: query
          description: "Start datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) of the timeslot to check for availability"
          required: true
          type: string
        - name: endDatetime
          in: query
          description: "End datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)  of the timeslot to check for availability" 
          required: true
          type: string
      responses:
        "200":
          description: Success. Returns an array with the availability of the participants.
          schema:
            type: object
            properties:
              meta:
                properties:
                  code:
                    type: string
              data:
                type: array
                items:
                  $ref: '#/definitions/ParticipantAvailability'

        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
  Building:
    description: Building data.
    type: object
    properties:
      name:
        type: string
        description: Name of the building
      site:
        type: string
        description: Name of the site of the building
      country:
        type: string
        description: Country code of the building
      floors:
        type: array
        items:
          $ref: '#/definitions/Floor'

  Floor:
    description: Floor data
    type: object
    properties:
      name:
        type: string
        description: Name of the floor
      roomIds:
        type: array
        items:
          type: string

  Room:
    description: Room data
    type: object
    properties:
      id:
        type: string
        description: |
          Id of the room. Must NOT be displayed to the end-user. Must NOT be parsed (must remain an opaque value).  
      type:
        type: string
        description: |
          Type of the room (the exact enumerated values are not yet known)
      fullName:
        type: string
        description: |
          Full name of the room (e.g. "Room-Par-Def-Tours-Sg-C11212-10P-Priv") 
      name:
        type: string
        description: |
          Display name of the room (e.g. "Tours-Sg-C11212-10P-Priv").
      office:
        type: string
        description: |
          Office name of the room, in fact its usual name, very short (e.g. "C11212"). 
          An alternate id of a room, is the couple (building, office).
      isPublic:
        type: boolean
        description: Is the room public (vs private) ?
      capacity:
        type: integer
        description: Max number of people in the room        
      equipments:
          $ref: '#/definitions/RoomEquipments'
      thumbnailUrl:
        type: string
        description: |
          URL of the thumbnail of the room. Optional.
          For performance reason, the thumbnail should be loaded maximum once per day and cached on the client side.
          The client may also use this URL as an id of the thumbnail and load the actual thumbnail from its local storage.
          Another option for the client is to NOT use this attribute but to use the room type attribute to choose 
          the actual thumbnail to diplay (the actual thumbnail is then loaded from the client's local storage).
      imageUrl:
        type: string
        description: |
          URL of the image/visual of the room (large image displayed after a room is selected by the user). Optional.
          For performance reason, the image should be loaded maximum once per day and cached on the client side.
          The client may also use this URL as an id of the image and load the actual image from its local storage.
          Another option for the client is to NOT use this attribute but to use the room type attribute to choose 
          the actual image to diplay (the actual image is then loaded from the client's local storage).
          
  RoomEquipments:
    description: "Equipements of a room (telephone, video projector...)"
    type: object
    properties:
      telephone:
        type: boolean
        description: Optional. Should be considered as false if not present or null.
      audioConf:
        type: boolean
        description: Optional. Should be considered as false if not present or null.
      videoConf:
        type: boolean
        description: Optional. Should be considered as false if not present or null.
      videoProjector:
        type: boolean        
        description: Optional. Should be considered as false if not present or null.
      television:
        type: boolean
        description: Optional. Should be considered as false if not present or null.
      smartScreen:
        type: boolean
        description: Optional. Should be considered as false if not present or null.
      touchScreen:
        type: boolean
        description: Optional. Should be considered as false if not present or null.
      others:
        type: array
        items:
          type: string
        description: Other equipments (non standard equipements). Optional. Should be considered as empty if not present or null.

  Booking:
    description: "Booking/schedule of a room for a meeting"
    type: object
    properties:
      bookingId:
        type: string
        description: Id of the booking. 
      roomId:
        type: string
        description: Id of the booked room or room to book
      startDatetime:
        type: string
        description: "Start datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) of the booking"
      endDatetime:
        type: string
        description: "End datetime [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) of the booking"
      owner:
        type: string
        description: Owner/chairman of the meeting
      object:
        type: string
        description: Object/Title of the meeting
      mandatoryParticipants:
        type: array
        items:
          type: string
        description: List of the mandatory participants of the meeting (emails of the participants)
      optionalParticipants:
        type: array
        items:
          type: string
        description: List of the optional participants of the meeting (emails of the participants)

  RoomAvailability:
    description: Indication of the availability of a room
    type: object
    properties:
      room:
        type: string
        description: RoomId
      available:
        type: boolean
        description: true if the room is available

  ParticipantAvailability:
    description: Indication of the availability of a participant of a meeting
    type: object
    properties:
      participant:
        type: string
        description: Participant (email)
      available:
        type: boolean
        description: true if the participant is available

  Error:
    description: Error object with a code and a message
    type: object
    properties:
      code:
        type: string
      message:
        type: string
